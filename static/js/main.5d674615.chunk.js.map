{"version":3,"sources":["Error.js","Weather.js","DetailedInfo.js","Forecast.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Error","props","console","log","type","className","icon","faFrown","faGrinBeamSweat","Weather","data","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","Math","floor","DetailedInfo","getHour","time","Date","getHours","getDate","displayMoreInfo","item","i","round","dt","map","Forecast","list","tiles","Object","values","reduce","forecastDate","dt_txt","substr","push","groupByDays","forecastTiles","length","slice","elementsRef","useRef","index","createRef","getDayInfo","weekday","toLocaleString","getDay","getIcon","weather","getInfo","min","max","temp_max","temp_min","minMax","avgHumdity","curr","next","ref","current","onClick","elm","expandedElment","document","querySelector","classList","add","remove","showMoreInfo","alt","src","Loader","class","App","useState","lat","setLat","long","setLong","setCity","error","setError","location","setLocation","weatherData","setWeatherData","forecastData","setForecastData","searchBar","load","setLoad","errorShow","setErrorShow","getweatherData","weatherResponse","currentDate","getMonth","sys","toLocaleTimeString","name","clouds","all","speed","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","code","PERMISSION_DENIED","then","latitude","longitude","fetch","process","getInitialData","response","a","json","foreCastResponse","weatherInfo","catch","err","placeholder","id","value","onChange","event","target","search","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d674615.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFrown,faGrinBeamSweat} from '@fortawesome/free-solid-svg-icons';\r\nimport './Error.css';\r\nfunction Error(props){\r\n    console.log('prop',props.type);\r\n       return(\r\n           <>\r\n           <div className='error-holder'>\r\n               <span className='error-icon'>\r\n               <FontAwesomeIcon icon={props.type ? faFrown : faGrinBeamSweat } />\r\n               </span>\r\n               <span>{!props.type?'Please enter a city name..':'Sorry, the specified city was not found...'}</span>\r\n           </div>\r\n           \r\n           </>\r\n       )\r\n   }\r\n   export default Error;","import './Weather.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nfunction Weather({data}){\r\n console.log('props',data);\r\n const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp,\r\n  } = data;\r\n  let weatherIcon = null;\r\n\r\n  if (main === 'Thunderstorm') {\r\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n  } else if (main === 'Drizzle') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n  } else if (main === 'Rain') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n  } else if (main === 'Snow') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n  } else if (main === 'Clear') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n  } else if (main === 'Clouds') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n  } else {\r\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n  }\r\n    return(\r\n        \r\n        <div className='result'>\r\n<div className='location'>\r\n<h2 className='big'>\r\n{city}, {country}\r\n</h2>\r\n<h4 className='small'>\r\n    {date}\r\n</h4>\r\n</div>\r\n<div className=\"current\">\r\n    <div className=\"weather-icon\">\r\n        {weatherIcon}\r\n    </div>\r\n    <div>\r\n        <h3 className='temp'>{Math.floor(temp)}&#176;</h3>\r\n        <h4 className='small'>\r\n    {description}\r\n</h4>\r\n    </div>\r\n</div>\r\n<div className='weather-detail'>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{Math.floor(highestTemp)}&#176;\r\n</h4>\r\n<span className=\"text\">High</span>\r\n</div>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{wind}mph\r\n</h4>\r\n<span className=\"text\">Wind</span>\r\n</div>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{sunrise}\r\n</h4>\r\n<span className=\"text\">Sunrise</span>\r\n</div>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{Math.floor(lowestTemp)}&#176;\r\n</h4>\r\n<span className=\"text\">Low</span>\r\n</div>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{humidity}%\r\n</h4>\r\n<span className=\"text\">Rain</span>\r\n</div>\r\n<div className=\"weather\">\r\n<h4 className='small-center'>\r\n{sunset}\r\n</h4>\r\n<span className=\"text\">Sunset</span>\r\n</div>\r\n</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Weather;","function DetailedInfo({data}){\r\n    console.log('test', data);\r\n\r\n    const getHour = time => time ? new Date(time).getHours() : new Date().getHours();\r\n    const getDate = date => date ? new Date(date).getDate() : new Date().getDate();\r\n  \r\n    const displayMoreInfo = (item, i) => {\r\n      return (\r\n        <div className=\"hourly-info\" key={i}>\r\n          <div className=\"hour-temperature\">\r\n            {`${Math.round(item.main.temp)}°C`}\r\n          </div>\r\n          <div className=\"hour-of-the-day\">\r\n            {`${getHour(item.dt * 1000)}:00`}\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    return (\r\n      <div className=\"hourly\">\r\n        {data.map((item, i) => (\r\n          (getHour(item.dt * 1000) > getHour() && getDate(item.dt * 1000) === getDate()) ? (\r\n            displayMoreInfo(item, i)\r\n           ) : getHour(item.dt * 1000) >= 5 && getHour(item.dt * 1000) <= 23 ? (\r\n              displayMoreInfo(item, i)\r\n           ) : null\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\nexport default DetailedInfo;","\r\n import{useRef,createRef}  from 'react';\r\n import './Forecast.css';\r\nimport DetailedInfo from './DetailedInfo';\r\nfunction Forecast({data}){\r\n    const { city, list } = data;\r\n    console.log('forecast',city,list); \r\n\r\n\r\n   const groupByDays = data => {\r\n        return (data.reduce((list, item) => {\r\n          const forecastDate = item.dt_txt.substr(0,10);\r\n          list[forecastDate] = list[forecastDate] || [];\r\n          list[forecastDate].push(item);\r\n    \r\n          return list;\r\n        }, {}));\r\n      };\r\n      const tiles = Object.values(groupByDays(list));\r\n    const forecastTiles = tiles.length > 5 ? tiles.slice(0, 5) : tiles;\r\n    console.log('test tiles',forecastTiles);\r\n\r\n      // Returns week of the day\r\n      const elementsRef = useRef(forecastTiles.map((item,index) => createRef(`div-${index}`)));\r\n    const   getDayInfo = data => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        const date =new Date();\r\n        let weekday = new Date(data[0].dt * 1000).toLocaleString('en-us', {weekday:'long'});\r\nconsole.log('Weekday',weekday);\r\n        console.log('date test',date, date.getDay(),daysOfWeek[date.getDay()])\r\n        return weekday;\r\n      };\r\n    \r\n      // Fetches the icon using the icon code available in the forecast data.\r\n      const getIcon = data => `https://openweathermap.org/img/w/${data[0].weather[0].icon}.png`;\r\n    \r\n      // Gets the Minimum, Maximum and Avg Humidity temperatures of the day.\r\n      const getInfo = (data, min=[], max=[], humidity=[]) => {\r\n        data.map(item => {\r\n          max.push(item.main.temp_max);\r\n          min.push(item.main.temp_min);\r\n          humidity.push(item.main.humidity);\r\n        });\r\n    \r\n        const minMax = {\r\n          min: Math.round(Math.min(...min)),\r\n          max: Math.round(Math.max(...max)),\r\n        };\r\n    \r\n        // Gets the day's average humdity\r\n        const avgHumdity = Math.round(humidity.reduce((curr, next) => curr + next) / humidity.length);\r\n    \r\n        return (\r\n          <div className=\"weather-info\">\r\n            <div className=\"min-max\">\r\n              <strong>{`${minMax.max}°C`}</strong> / {`${minMax.min}°C`}\r\n            </div>\r\n            <div className=\"more-info\">\r\n              {`Avg. Humidity: ${avgHumdity}%`}\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n      // Toggles accordion to display hourly weather information\r\n      const showMoreInfo = (index) => {\r\n        const elm = elementsRef.current[index];\r\n        const expandedElment = document.querySelector(\".expanded\");\r\n    \r\n        elm.current.classList.add(\"expanded\");\r\n        expandedElment !== null && expandedElment.classList.remove(\"expanded\");\r\n      }\r\nreturn(\r\n    <div className='forecast'>\r\n    <div>\r\n        <h3 className='medium'>Forecast</h3></div>\r\n        <div className=\"forecast-tiles\">\r\n        {forecastTiles.map((item, i) => (\r\n          <div\r\n            className={`forecast-tile tile-${i}`}\r\n            key={i}\r\n            ref={elementsRef.current[i]}\r\n            onClick={() => {showMoreInfo(i)}}\r\n          >\r\n            <div className=\"primary-info\">\r\n              <div className=\"icon\">\r\n                <img alt={'icon'+i }src={getIcon(item)} />\r\n                {getDayInfo(item)}\r\n              </div>\r\n              {getInfo(item)}\r\n            </div>\r\n            <div className=\"detailed-info\" key={i}>\r\n              <DetailedInfo data={item} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Forecast;","import './Loader.css';\r\nfunction Loader(){\r\n\r\nreturn(\r\n    <div class='container'>\r\n    <div class='loader'>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--dot'></div>\r\n      <div class='loader--text'></div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\nexport default Loader","\n import{useState,useEffect,useRef}  from 'react';\nimport './App.css';\nimport Error from './Error';\nimport Weather  from './Weather';\nimport Forecast from './Forecast';\nimport Loader from './Loader';\nfunction App() {\n  \n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n  const [city, setCity] = useState('');\n  const [error, setError] = useState(false);\n  const [location, setLocation] = useState(true);\n  const [weatherData, setWeatherData] = useState([]);\n  const [forecastData, setForecastData] = useState([]);\n  const searchBar = useRef(null);\n  const [load, setLoad] = useState(true);\n  const [errorShow,setErrorShow]= useState(false);\nconst getInitialData =  (lat,long)=>{\n return Promise.all([ fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`),\n  fetch(`${process.env.REACT_APP_API_URL}/forecast/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)])\n}\nconst getSearchData =  (search)=>{\n  return Promise.all([ fetch(`${process.env.REACT_APP_API_URL}/weather/?q=${search}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`),\n   fetch(`${process.env.REACT_APP_API_URL}/forecast/?q=${search}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)])\n }\n const getweatherData =(weatherResponse)=>{\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'Nocvember',\n    'December',\n  ];\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const currentDate = new Date();\n  const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n    months[currentDate.getMonth()]\n  }`;\n  const sunset = new Date(weatherResponse.sys.sunset * 1000).toLocaleTimeString().slice(0, 12);\n  const sunrise = new Date(weatherResponse.sys.sunrise * 1000).toLocaleTimeString().slice(0, 10);\n\n return {\n    city: weatherResponse.name,\n    country: weatherResponse.sys.country,\n    date,\n    description: weatherResponse.weather[0].description,\n    main: weatherResponse.weather[0].main,\n    temp: weatherResponse.main.temp,\n    highestTemp: weatherResponse.main.temp_max,\n    lowestTemp: weatherResponse.main.temp_min,\n    sunrise,\n    sunset,\n    clouds: weatherResponse.clouds.all,\n    humidity: weatherResponse.main.humidity,\n    wind: weatherResponse.wind.speed,\n  };\n  \n }\n  useEffect(() => {\n    const detectLocation = new Promise((resolve,reject) => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          resolve(position.coords);\n        }, (error) => {\n          console.log('error',error);\n          if(error.code === error.PERMISSION_DENIED) {\n            setLocation(false);\n            console.error(\"Error detecting location.\");\n            setLoad(false);\n          }\n        });\n      }\n    });\n    \n    detectLocation.then((location) => {\n      setLat(location.latitude);\n      setLong(location.longitude);\n      if(lat!==null && long !== null){\n        getInitialData(lat,long).then(async response=>{\n          const weatherResponse = await response[0].json();\n          const foreCastResponse = await response[1].json();\n          const weatherInfo = getweatherData(weatherResponse);\n          setWeatherData(weatherInfo);\n          setForecastData(foreCastResponse);\n          setCity(weatherResponse.name);\n          setLoad(false);\n        }).catch((err)=>{\n            console.log('error',err);\n            setLoad(false);\n          });\n      //    fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n      // .then(res => res.json())\n      // .then(result => {\n      //   setData(result)\n      //   setLoad(false);\n      //   console.log(result);\n      // }).catch((err)=>{\n      //   console.log('error',err);\n      //   setLoad(false);\n      // });\n    }\n    }).catch((error) => {\n      console.log('error in coordinates',error);\n      setLoad(false);\n      throw error;\n    });\n  \n  }, [lat,long])\n  const onSearch=(event)=>{\nconsole.log('test',searchBar.current.value);\n//  searchBar.current.value===''?setErrorShow(false):setErrorShow(true);\n if(searchBar.current.value!=='')\n{\n  getSearchData(searchBar.current.value).then(async response=>{\n  const weatherResponse = await response[0].json();\n  const foreCastResponse = await response[1].json();\n  console.log(response[0].status,response[1].status);\n  \n  if(response[0].status === 200){\n    if(error){\n      setError(false);\n    }\n   const weatherInfo = getweatherData(weatherResponse);\n    await setWeatherData(weatherInfo);\n    setCity(weatherResponse.name);\n  }else{\n    setErrorShow(true);\n    await setError(true);\n    console.log('error',error);\n  }\n  if(response[1].status === 200){\n    setForecastData(foreCastResponse);\n    if(!location){\n      setLocation(true);\n    }\n  }else{\n    console.log('error1',error);\n    setError(true);\n  }\n  \n\n  console.log('city test',city,weatherData);\n}).catch((err)=>{\n    console.log('error search',err);\n    throw err;\n  });\n}else{\n  setErrorShow(false)\n  setError(true);\n}\n  }\n  const onChangeSearch=(event)=>{\n    setCity(event.target.value);\n    console.log('test',event.target.value);\n\n      }\n  return (\n    <>\n    {!load ? (<> <div className=\"App\"><div className=\"item-center\">WEATHER APP</div>\n     <input type=\"search\" placeholder=\"Search a city\"  name=\"search\" id=\"search\" ref={searchBar} value={city} onChange={onChangeSearch}/>\n        <div className='search-div'><button className='search'  type=\"submit\" onClick={onSearch}>Search</button></div></div>\n        {error ? <Error type={errorShow}/>: location ? <> <Weather data={weatherData}/><Forecast data={forecastData}/></> :''}</>\n        ): <Loader/>}\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}